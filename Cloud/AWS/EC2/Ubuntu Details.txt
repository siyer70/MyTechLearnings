sudo apt-get update
sudo apt install -y openjdk-8-jre-headless

sudo apt-get install -y curl

Latest 10.x version
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs

Specific version
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
for env in $( cat /etc/environment ); do export $(echo $env | sed -e 's/"//g'); done
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  
nvm install v10.16.1
npm install -g serve


Install apache (if required)
sudo apt-get install apache2 -y

Java installation on ubuntu ec2 instance
https://medium.com/@anusha.sharma3010/installing-java-jenkins-on-aws-ec2-ubuntu-16-04-147fbc3bfba6

https://medium.com/@GalarnykMichael/aws-ec2-part-2-ssh-into-ec2-instance-c7879d47b6b2

NodeJS Installation on ubuntu ec2 instance
https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/
https://tecadmin.net/install-nodejs-with-nvm/

Not required
source ~/.profile     ## Debian based systems 
source ~/.bashrc      ## CentOS/RHEL systems 

#Ubuntu (for reloading the environment variables)

=> Close and reopen your terminal to start using nvm or run the following to use it now:



# First command loads nvm
# Second command loads nvm bash_completion


nvm install v10.16.1


for env in $( cat /etc/environment ); do echo $env | sed -e 's/"//g'; done

Ports to be opened
22 for ssh
8080 for web server
8500 for api server

Single click deployment Steps
1. Create directories
2. Upload start, status, stop shell scripts
3. Upload binary in gz format
4. execute stop script
5. Execute status script
6. Extract new version 
7. execute start script
8. Execute status script


export REMOTE_HOST=13.58.209.5

REMOTE_HOST=13.58.209.5
ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'mkdir -p infoserver'
ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'mkdir -p infoserver/bin'
ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'mkdir -p infoserver/logs'
ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'mkdir -p infoserver/backup'

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/PE/Jenkins/jenkins.pem bin/start.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/bin/

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/PE/Jenkins/jenkins.pem bin/status.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/bin/

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/PE/Jenkins/jenkins.pem bin/stop.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/bin/

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/PE/Jenkins/jenkins.pem bin/backuplastrelease.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/bin/

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'cd /home/ubuntu/infoserver && bin/backuplastrelease.sh'

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/PE/Jenkins/jenkins.pem release.tar.gz ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem '/home/ubuntu/infoserver/bin/stop.sh'

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem 'cd /home/ubuntu/infoserver && ls -ltr && tar -xvf release.tar.gz'

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem '\. /home/ubuntu/.nvm/nvm.sh && cd /home/ubuntu/infoserver && echo $PATH && bin/start.sh'

ssh ubuntu@$REMOTE_HOST -i ~/Documents/PE/Jenkins/jenkins.pem '/home/ubuntu/infoserver/bin/status.sh'


. /etc/environment
. ~/.bashrc

export REMOTE_HOST=13.234.189.83
ssh ubuntu@$REMOTE_HOST -i ~/Documents/webserver01.pem "mkdir -p infoserver”

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/webserver01.pem start.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/webserver01.pem stop.sh ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/

scp -v -o StrictHostKeyChecking=no  -i ~/Documents/webserver01.pem release.tar.gz ubuntu@$REMOTE_HOST:/home/ubuntu/infoserver/

tar -xvf release.tar.gz 

./stop.sh
./start.sh


#stop, start, reload and restart
sudo systemctl stop apache2
sudo systemctl start apache2

sudo systemctl reload apache2
sudo systemctl restart apache2

Apache config location in ubuntu
/etc/apache2/apache2.conf 

scp -i ~/Documents/PE/Jenkins/jenkins.pem ubuntu@13.58.209.5:~/infoserver/\{start.sh,status.sh,stop.sh\} .
scp -i ~/Documents/PE/Jenkins/jenkins.pem ubuntu@13.58.209.5:~/infoserver/bin/backuplastrelease.sh .


#removing all .DS_Store files from Git
#removes only .DS_Store from the current directory
git rm --cached .DS_Store 

#removes from all directories in git repo
find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch

#ignore .DS_Store files for all projects - setting the ignore files globally

echo .DS_Store >> ~/.gitignore_global
git config --global core.excludesfile ~/.gitignore_global

