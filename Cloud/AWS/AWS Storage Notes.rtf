{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Storage\
======\
S3 (Simple Storage Service)\
	- Secure, Durable and Scalable Object Storage\
	- web service interface to store and retrieve any amount of data from anywhere on the web\
	- flat files, word documents, pictures, movies\
	- data is spread across multiple devices and multiple facilities\
	- can support file size upto 5 TB\
	- unlimited storage\
	- files are stored in buckets (buckets are similar to folders / grouping)\
	- S3 is a universal namespace - names must be unique globally\
	- naming convention: https://s3-<region>-.amazonaws.com/<bucketname>\
	- eg (https://s3-eu-west-1.amazonaws.com/somebucket)\
	- upload success returns http 200 status code\
	- not suitable to install an operating system on (or store os images) - block based storages is suitable for that\
	- You can specify the storage class when uploading files\
	- key value store - Think of Objects just as files - Objects consists of the following\
		- value is made up of a sequence of bytes\
		- version id\
		- metadata\
		- sub resources (ACLs and Torrent)\
	- Data Consistency\
		- Read after write for PUTs of new objects\
		- Eventual Consistency for overwrite PUTs and DELETEs (takes some time to propagate)\
	- Guarantees\
		- build for 99.99% availability\
		- Amazon guarantees 99.9% availability\
		- Amazon guarantees 11 x 9s durability\
	- S3 features\
		- Tiered storage available (all with 11 x 9s durability and with milliseconds latency except S3 Glacierxxx)\
			- S3 Standard\
				- 99.99% availability (99.9% SLA)\
				- stored reduntantly across multiple devices in multiple facilities\
				- designed to sustain loss of 2 concurrent facilities\
				- Availability Zones >= 3\
			- S3 IA (Infrequently Accessed)\
				- 99.9% availability (99% SLA)\
				- For data accessed less frequently but requires rapid access when needed\
				- Lower fee for storage, but you are charged a retrieval fee\
				- Availability Zones >= 3\
				- Minimum capacity charge per object = 128 KB\
				- Minimum storage duration charge = 30 days\
				- Retrieval Fee - per GB retrieved\
			- S3 One Zone IA (reduced redundancy storage)\
				- 99.5% availability (99% SLA)\
				- Lower-cost option for infrequently accessed data\
				- that do not require multiple availability zone data resilience\
				- Availability Zones = 1\
				- Minimum capacity charge per object = 128 KB\
				- Minimum storage duration charge = 30 days\
				- Retrieval Fee - per GB retrieved\
			- S3 Intelligent Tiering\
				- 99.9% availability (99% SLA)\
				- Designed to optimise costs by automatically moving data to the most cost-effective access tier\
				- The above done without performance impact and operational overhead\
				- uses machine learning to accomplish the above\
				- Availability Zones >= 3\
				- Minimum storage duration charge = 30 days\
			- S3 Glacier\
				- S3 Glacier is a secure, durable and low-cost storage class for data archiving\
				- store any amount of data at costs competitive with or cheaper than on-premises solutions\
				- retrieval times can be configurable from minutes to hours\
				- Availability Zones >= 3\
				- Minimum capacity charge per object = 40 KB\
				- Minimum storage duration charge = 90 days\
				- Retrieval Fee - per GB retrieved\
				- First byte Latency - Minutes or Hours\
			- S3 Glacier Deep Archive\
				- it is the lowest cost storage class where retrieval time of 12 hours is acceptable\
				- Availability Zones >= 3\
				- Minimum capacity charge per object = 40 KB\
				- Minimum storage duration charge = 180 days\
				- Retrieval Fee - per GB retrieved\
				- First byte Latency - Hours\
		- Transfer Acceleration\
			- enables fast, easy and secure transfer of files over long distances between your end users and s3 bucket\
			- takes advantage of Cloudfront\'92s globally distributed edge locations\
			- users will be given a distinct url to upload to edge locations\
			- such as - <your account>.s3-accelerate.amazonaws.com\
			- as the data arrives at an edge location, data is routed to amazon S3 over an optimised network path\
		- Versioning\
			- stores all versions of an object (including all writes and even if you delete an object)\
			- great backup tool\
			- once enabled, versioning cannot be disabled, only suspended\
			- integrates with lifecycle rules\
			- MFA for delete\
			- if you turn on versioning, the size of bucket could grow exponentially especially when you have large files\
			- when new versions are uploaded, by default the new version is not public\
			- old version\'92s permission is not affected\
			- when you delete the file, it creates a new version with delete marker\
			- if you enable show versions option, you can see the version with the delete marker\
			- to restore the version before the delete, simply delete the version with delete marker\
			- similarly when you delete the latest version, the previous version becomes the latest version\
		- Security and Encryption\
			- By default - bucket and objects are not public\
			- You can turn off this feature by edit permissions and unchecking all \'93Block Public\'85\'94 options\
			- You can also enable access to other AWS account\
			-  You can grant public read access to the uploaded object\
			- Bucket Policies - at bucket level\
			- ACLs - can define individual objects\
			- S3 buckets can be configured to create access logs\
			-  Access log can be sent to separate bucket in the same account or another account\
			- Encryption\
				- Encryption during Transit is achieved through SSL/TLS\
				- Encryption at rest can be achieved at server side or client side\
					- Server Side\
						- S3 Managed Keys - SSE-S3 (Server Side Encryption S3)\
						- AWS Key Management Service (KMS), Managed Keys - SSE-KMS\
						- Server Side Encryption with Customer provided keys - SSE-C\
					- Client Side\
						- you encrypt the object and upload it to Amazon\
		- Lifecycle Management\
			- You can specify the lifecycle rules to manage objects\
			- You can optionally provide tag prefix, so that lifecycle rules are only applied to those objects with that tags \
			- Automate transition to tiered storage\
				- You can specify a storage class where the object would be moved after a specified duration\
					- i.e. Number of days after the object is created\
					- this can be done for both current version and previous version(s)\
			- Expire current version\
				- You can expire the current by specifying the duration\
			- You can permanently delete previous versions after specified duration\
			- You can configure to clean up incomplete multi-part uploads\
		- Cross Region Replication (CRR)\
			- You need to enable versioning in both source and destination bucket before CRR is turned on\
			- From the Management tab select replication option and add a rule\
			- You can replicate the entire bucket or specify a tag so that objects with only those tags are impacted\
			- Overall follow these steps\
				- select the source bucket or prefix/tags\
				- optionally check replicate objects encrypted with AWS KMS and specify one or more keys\
				- create or select the destination bucket\
					- select Buckets in this account or Bucket in another account \
					- select the region (you can select any region)\
				- select the region where you want to replicate (you can\'92t select the same region)\
				- you can change the storage class in the replicate region\
				- you can change the object ownership to destination bucket owner\
				- specify the IAM role or create a new one\
					- if new one - create a rule name that will give permission for replication\
				- hit save\
			- After the replication is turned on, only new files added, versioned will be replicated\
			- Existing files before replication is turned on, is not replicated\
			- Note that deletion of objects or deleting a version will NOT be replicated (AWS intentionally avoids this) \
		- S3 Charge policies\
			- the more you store, the more you billed\
			- more requests more charge\
			- storage management pricing is based on tier based charges\
			- data transfer pricing\
			- transfer acceleration\
			- cross region replication pricing\
		(torrent?)\
	\
EFS (File Storage Service)\
	- File Storage Service for EC2 instances\
	- allows you to create and configure file systems quickly and easily\
	- you can then share files between multiple EC2 instances\
	- storage capacity is elastic - growing and shrinking automatically as you add and remove files\
		- so your applications have the storage they need, when they need it\
	- similar to EBS, but in EBS, \
		- you cannot share the same volume with two different EC2 instances\
		- you need to pre provision the capacity\
\
	- use case\
		- you can put you website content in EFS and then share it with multiple EC2 instances\
\
	- supports the Network File System version 4 (NFSv4) protocol\
	- you only pay for the storage you use (no pre-provisioning required)\
	- can scale up to the petabytes\
	- can support thousands of concurrent NFS connections\
	- data is stored across multiple AZ\'92s within a region\
	- read after write consistency\
Glacier\
Storage Gateway\
AWS Backup\
}