//To connect to mongodb server(MongoDB Shell)
mongo --port 27017

//Authentication
use admin 
db.auth("username","password");

//To See List of databases 
show dbs

//To create new database or switch to existing db
use <dbname>

//Create new collection
db.createCollection(<name>, { capped: <boolean>,
                              autoIndexId: <boolean>,
                              size: <number>,
                              max: <number>,
                              storageEngine: <document>,
                              validator: <document>,
                              validationLevel: <string>,
                              validationAction: <string>,
                              indexOptionDefaults: <document>,
                              viewOn: <string>,
                              pipeline: <pipeline>,
                              collation: <document>,
                              writeConcern: <document>} )

db.createCollection("nilap");

//Capped Collection
db.createCollection("log", { capped : true, size : 5*1024*1024*1024, max : 10000 } )
size-->number of bytes
max-->maximum number of records
capped --> true --> fixed size collection

db.createCollection( "contacts", {
   validator: { $jsonSchema: {
      bsonType: "object",
      required: [ "phone" ],
      properties: {
         phone: {
            bsonType: "string",
            description: "must be a string and is required"
         },
         email: {
            bsonType : "string",
            pattern : "@mongodb\.com$",
            description: "must be a string and match the regular expression pattern"
         },
         status: {
            enum: [ "Unknown", "Incomplete" ],
            description: "can only be one of the enum values"
         }
      }
   } }
} )

//Insert only phone number
db.contacts.insert({"phone":"1234567890"});

//Insert only email
db.contacts.insert({"email":"nilap@gmail.com"});
db.contacts.insert({"email":"nilap@gmail.com","status":"Unknown"});
db.contacts.insert({"phone":"1234567890","email":"nilap@gmail.com","status":"Unknown"});
db.contacts.insert({"phone":"1234567890","email":"nilap@mongodb.com","status":"ABC"});

db.contacts.insert({"phone":"1234567890","email":"nilap@mongodb.com","status":"Unknown"});

validation level
"off"-->No Validadation
"strict"-->Default Apply validation rules to all inserts and all updates
"moderate"-->Apply validation rules to inserts and to updates on existing valid documents

validationAction
"error"--> must pass validation
"warn"-->it will just send warning

writeConcern-->majority

*************************************************-----------------------------------------------******************************************
mongodb scripts
**************************myscript.js***************************
conn = new Mongo();
db = conn.getDB("training");

var arrColl = db.getCollectionNames();
for(var i=0;i<arrColl.length;i++){
print("item number : " + i + " " + arrColl[i]);
}

execute: mongo myscript.js
*************************myscriptloop.js****************************************
conn = new Mongo();
db = conn.getDB("training");

cursor = db.getCollection("testcoll3").find();
while ( cursor.hasNext() ) {
   printjson( cursor.next() );
}

execute: mongo myscriptloop.js

*************************creating view******************************************
db.survey.insertOne({ _id: 1, empNumber: "abc123", feedback: { management: 3, environment: 3 }, department: "A" });
db.survey.insertOne({ _id: 2, empNumber: "xyz987", feedback: { management: 2, environment: 3 }, department: "B" });
db.survey.insertOne({ _id: 3, empNumber: "ijk555", feedback: { management: 3, environment: 4 }, department: "A" });

db.createView(
   "managementFeedback",
   "survey",
   [ { $project: { "management": "$feedback.management", department: 1 } } ]
)
