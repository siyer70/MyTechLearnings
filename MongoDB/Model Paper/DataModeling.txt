local database : data_modeling_1

1.You have two types of documents. A documents and B documents. There is one to many relationship from A to B Which of following are conditions that favor embedding B documents within A documents rather than referencing ?

Option 1 : All of the Bs associated with a given A are required every time. 
Option 2 : The set of Bs associated with a given A changes often
Option 3 : The number of Bs is bounded and relatively small


2. Of the following which is the most important MongoDB schema design consideration ?

Option 1 : Normalizing your data 
Option 2 : Limiting amount od disk space Used
Option 3 : Making your schema Human Readable
Option 4 : Making your design extensible
Option 5 : Matching data access pattern of your application 

3. Suppose you are working with a library catalog system containing collections for patrons,  publishers and books. Book documents maintain a field “available” that identifies how many copies are currently available for checkout. There is also a field “checkout” that holds a record of all patrons that currently borrowing a copy of book. 

For example, the document below indicates that the library owns four copies of book. The document below indicates that library owns four copies of “Good Book”. There are currently available for checkout. One has been checked out by patron “33457”.

{
"_id" : 123456789,
Title : "Good Book",
Author : { " Sam Goodman", "Mike Smith" },published_date : ISODate("2010-09-24"),
Publisher_id : "Smith Publishing",
Available : 3,
Checkout : { { "patron_id" : "33457", date : ISODate("2012-10-15") } }
}

Which of the following  is the primary advantage to this design ?

We get the ability to retrieve a complete checkout history for books as a side effect
We maintain the ability to update patrons, publishers and books independently and safely rely on MongoDB’s foreign key constraints 
Books will not grow beyond the MongoDB documents size limit
Can retrieve all data about a book. Its publisher and any patrons who checked out the book with a single query
Can make atomic updates as books are checked out or turned in. 

4. Which one of following best describes when it is recommended to represent one-to-many relationship using multiple collections ?

When the many is large 
When the many is small 
This is always the recommended option
This is never recommended 
When disk space is limited 



